# config/packages/security.yaml
security:
    password_hashers:
        # auto hasher with default options for the User class (and children)
        App\Entity\User: 'auto'

        # auto hasher with custom options for all PasswordAuthenticatedUserInterface instances
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: 'auto'

    enable_authenticator_manager: true
    # ...

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            provider: app_user_provider
            pattern:   ^/api
            stateless: true
            jwt: ~
   
    access_control:
        - { path: ^/api/admin/stores, roles: [ROLE_ADMIN] }
        - { path: ^/api/store/\d+, roles: [ROLE_ADMIN , ROLE_STOREMANAGER, ROLE_EMPLOYEE] }
        - { path: ^/api/admin/store/add, roles: [ROLE_ADMIN] }
        - { path: ^/api/admin/store/update/\d+, roles: [ROLE_ADMIN, ROLE_STOREMANAGER] }
        - { path: ^/api/admin/store/delete/\d+, roles: [ROLE_ADMIN] }
        - { path: ^/api/admin/store/\d+/users, roles: [ROLE_ADMIN,ROLE_STOREMANAGER] }
        - { path: ^/api/store/\d+/users/, roles: [ROLE_ADMIN, ROLE_STOREMANAGER] }
        - { path: ^/api/store/\d+/user/add, roles: [ROLE_ADMIN, ROLE_STOREMANAGER] }
        - { path: ^/api/store/\d+/user/update/\d+, roles: [ROLE_ADMIN, ROLE_STOREMANAGER, ROLE_EMPLOYEE] }
        - { path: ^/api/client/stores+, roles: [ROLE_CLIENT,ROLE_STOREMANAGER,ROLE_EMPLOYEE] }
        - { path: ^/api/client/store/associate, roles: [ROLE_CLIENT] }




